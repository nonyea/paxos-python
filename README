Distributed algorithms project 2023

Chukwunonye Agbakuru-Nwogu

Overview
This project implements the Paxos consensus algorithm, a distributed algorithm for achieving consensus among a set of processes. It includes components such as acceptors, proposers, learners, and clients, each playing a specific role to achieve consensus in the Paxos protocol.

This is a Python project

The initially provided fake-paxos folder was edited in order to create the 'MyPaxos' folder which contains the full implementations of the Paxos project.

The MyPaxos folder contains 3 pythons files which are:
1) paxos.py:
    Main Paxos implementation.
    Likely contains logic for acceptors, proposers, learners, and clients.
    Handles communication, message processing, and network tasks.
    Launches different processes for each Paxos role.

2) message.py:
    Defines the Message class for Paxos messages.
    Defines attributes like instance, phase, c_rnd, etc.

3) config.py:
    Stores configuration settings for Paxos' number of acceptors, loss percentage, and timeout


Testing the Project:
To properly test, run the command lines provided below in your terminal
Replace `x` with the number of values you want to be proposed (e.g., 100, 1000).
After each test, the command ./check_all.sh


    - For Test 1:

        ./run.sh MyPaxos x



    - For Test 2 (2 Acceptors):

        Before running the line below, The amount of acceptors being run will have to changed to '2' in the `MyPaxos/config.py` file (Line3) so that the change will be implemented by the code.
          
        ./run_2acceptor.sh MyPaxos x



    - For Test 3 (1 Acceptor):

        Before running the line below, The amount of acceptors being run will have to changed to '1' in the `MyPaxos/config.py` file (Line3) so that the change will be implemented by the code.

        ./run_1acceptor.sh MyPaxos x
          


    - For Test 4 (Message Loss):

        For this test, you can run it using the command below, or any other run file
        Before running the line above, The loss percentage being run will have to changed in the `MyPaxos/config.py` file (Line4) so that the change will be implemented by the code.
          
        ./run_loss.sh MyPaxos x
          


    - For Test 5 (Kill Acceptors):
        First, run test 1
          
        ./run.sh MyPaxos x
          
        Then, use the command 'kill -9 ID' to kill an acceptor in another terminal. This command terminates the specified acceptor.
        The IDs of each acceptor are printed at the start.
        With the 'kill -9 ID' command, replace the ID with the actual ID of an acceptor.
        For example, if '-> acceptor 2  id: 18059' is printed, then the kill command will be 'kill -9 18059'



    - For Test 6 (Learner Catch Up):
          
        ./run_catch_up.sh MyPaxos x
          
